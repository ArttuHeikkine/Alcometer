{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\arttu\\\\alkometri\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport default function Functions() {\n  _s();\n\n  const [litres, setLitres] = useState(0);\n  const [Grams, setGrams] = useState(0);\n  const [Burning, setBurning] = useState(0);\n  const [Gramsleft, setGramsleft] = useState(0);\n  const [Bottles, setBottles] = useState(0);\n  const [Weight, setWeight] = useState(0);\n  const [Time, setTime] = useState(0);\n  const [resultfemale, setResultfemale] = useState(0);\n  const [resultmale, setResultmale] = useState(0);\n\n  function alcometer(e) {\n    e.preventDefault();\n    const litres = Bottles * 0.33;\n    setLitres(litres);\n    e.preventDefault();\n    const Grams = litres * 8 * 4.5;\n    setGrams(Grams);\n    e.preventDefault();\n    const Burning = Weight / 10;\n    setBurning(Burning);\n    e.preventDefault();\n    const gramsleft = Grams - Burning * Time;\n    setGramsleft(gramsleft);\n    e.preventDefault();\n    const resultfemale = gramsleft / (Weight * 0.6);\n    setResultfemale(resultfemale);\n    e.preventDefault();\n    const resultmale = gramsleft / (Weight * 0.7);\n    setResultmale(resultmale);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: alcometer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Calculating alcohol blood level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: Weight,\n        onChange: e => setWeight(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bottles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: Bottles,\n        onChange: e => setBottles(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: Time,\n        onChange: e => setTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"FEMALE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \" Female\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"MALE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), \" Male\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"if(checkbox.ischecked) document.getElementById(\\\"\\\") =\", /*#__PURE__*/_jsxDEV(\"output\", {\n        children: resultmale.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"output\", {\n        children: resultfemale.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Functions, \"PGKTmjr7Dhw5eCRVLPH05OdsWD8=\");\n\n_c = Functions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Functions\");","map":{"version":3,"sources":["C:/Users/arttu/alkometri/src/App.js"],"names":["React","useState","Functions","litres","setLitres","Grams","setGrams","Burning","setBurning","Gramsleft","setGramsleft","Bottles","setBottles","Weight","setWeight","Time","setTime","resultfemale","setResultfemale","resultmale","setResultmale","alcometer","e","preventDefault","gramsleft","target","value","toFixed"],"mappings":"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","sourcesContent":["\nimport React, {useState} from 'react';\n\nexport default function Functions() {\n  const [litres, setLitres] = useState(0);\n  const [Grams, setGrams] = useState(0);\n  const [Burning, setBurning] = useState(0);\n  const [Gramsleft, setGramsleft] = useState(0);\n  const [Bottles, setBottles] = useState(0);\n  const [Weight, setWeight] = useState(0);\n  const [Time, setTime] = useState(0);\n  const [resultfemale, setResultfemale] = useState(0);\n  const [resultmale, setResultmale] = useState(0);\n\n  function alcometer(e) {\n    e.preventDefault();\n    const litres = Bottles * 0.33;\n    setLitres(litres);\n\n    e.preventDefault();\n    const Grams = litres * 8 * 4.5;\n    setGrams(Grams);\n\n    e.preventDefault();\n    const Burning = Weight / 10;\n    setBurning(Burning);\n\n    e.preventDefault();\n    const gramsleft = Grams - (Burning * Time)\n    setGramsleft(gramsleft);\n\n    e.preventDefault();\n    const resultfemale = gramsleft / (Weight * 0.6);\n    setResultfemale(resultfemale);\n\n    e.preventDefault();\n    const resultmale = gramsleft / (Weight * 0.7);\n    setResultmale(resultmale);\n  }\n\n  return (\n    <form onSubmit={alcometer}>\n      <div>\n        <h3>Calculating alcohol blood level</h3>\n        <label>Weight</label>\n        <input type=\"number\" value={Weight} onChange={e => setWeight(e.target.value)} />\n        <br />\n        <label>Bottles</label>\n        <input type=\"number\" value={Bottles} onChange={e => setBottles(e.target.value)} />\n        <br />\n        <label>Time</label>\n        <input type=\"number\" value={Time} onChange={e => setTime(e.target.value)} />\n        <br />\n        <label>Gender</label>        \n        <input type=\"radio\" value=\"FEMALE\" /> Female       \n        <input type=\"radio\" value=\"MALE\" /> Male\n      </div>\n      <div>\n        if(checkbox.ischecked)\n        document.getElementById(\"\") =\n        <output>{resultmale.toFixed(2)}</output>;\n        <output>{resultfemale.toFixed(2)}</output>\n\n      </div>\n      <button>Calculate</button>\n    </form>\n  )\n  \n}"]},"metadata":{},"sourceType":"module"}